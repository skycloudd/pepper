module shapes;

func main() {
    var planets = ["Venus", "Earth", "Mars"];

    for (idx, planet) in enumerate(planets) {
        println("planet $(idx + 1): $(planet)");
    };

    var n = 10;
}

func fibonacci(n: Int32) -> Int32 {
    match n {
        n where n < 2 => n,
        _ => fibonacci(n - 1) + fibonacci(n - 2),
    }
}

func shape_area(shape: shapes.FullShape) -> Int32 {
    var area = match shape.shape {
        Shape.Circle(radius) => {
            println("circle with radius $(radius)");
            3.14 * radius * radius
        },
        Shape.Rectangle { width, height } => {
            println("$width x $height rectangle");
            width * height
        },
        Shape.Point => {
            println("point");
            0
        },
    };

    println("color: $(shape.color)");

    area
}

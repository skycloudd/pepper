---
source: src/lib.rs
description: "func type_patterns(aaaa Aaaa, bbbb Bbbb) Float32 =\n    var _ Float32 = match aaaa\n    | Aaaa { aa 2.5, bb 1.5 } => 1.5\n    | Aaaa { aa, bb } => n * m\n    in\n\n    match bbbb\n    | Bbbb.Cccc(2) => 1.5\n    | Bbbb.Cccc(n) => n * 3. / 2.\n    | Bbbb.Dddd => n * 4. / 2. + 1.\n\nstruct Aaaa {\n    aa Float32,\n    bb Float32,\n}\n\nenum Bbbb = Cccc(int32) | Dddd"
expression: ast.unwrap()
input_file: tests/parser/match/type_patterns.pr
snapshot_kind: text
---
- Function:
    name: type_patterns
    generics: ~
    params:
      - name: aaaa
        ty:
          Primitive:
            name:
              base: Aaaa
              segments: []
            generics: ~
      - name: bbbb
        ty:
          Primitive:
            name:
              base: Bbbb
              segments: []
            generics: ~
    return_ty:
      Primitive:
        name:
          base: Float32
          segments: []
        generics: ~
    body:
      Binding:
        name: _
        ty:
          Primitive:
            name:
              base: Float32
              segments: []
            generics: ~
        value:
          Match:
            expr:
              Name: aaaa
            arms:
              - pattern:
                  pattern_type:
                    StructType:
                      name:
                        base: Aaaa
                        segments: []
                      fields:
                        - name: aa
                          pattern:
                            pattern_type:
                              Float: "2.5"
                            condition: ~
                        - name: bb
                          pattern:
                            pattern_type:
                              Float: "1.5"
                            condition: ~
                  condition: ~
                body:
                  Float: "1.5"
              - pattern:
                  pattern_type:
                    StructType:
                      name:
                        base: Aaaa
                        segments: []
                      fields:
                        - name: aa
                          pattern: ~
                        - name: bb
                          pattern: ~
                  condition: ~
                body:
                  BinaryOp:
                    op: Mul
                    lhs:
                      Name: n
                    rhs:
                      Name: m
        body:
          Match:
            expr:
              Name: bbbb
            arms:
              - pattern:
                  pattern_type:
                    TupleType:
                      name:
                        base: Bbbb
                        segments:
                          - Cccc
                      fields:
                        - pattern_type:
                            Int: "2"
                          condition: ~
                  condition: ~
                body:
                  Float: "1.5"
              - pattern:
                  pattern_type:
                    TupleType:
                      name:
                        base: Bbbb
                        segments:
                          - Cccc
                      fields:
                        - pattern_type:
                            Name:
                              base: n
                              segments: []
                          condition: ~
                  condition: ~
                body:
                  BinaryOp:
                    op: Div
                    lhs:
                      BinaryOp:
                        op: Mul
                        lhs:
                          Name: n
                        rhs:
                          Float: "3."
                    rhs:
                      Float: "2."
              - pattern:
                  pattern_type:
                    Name:
                      base: Bbbb
                      segments:
                        - Dddd
                  condition: ~
                body:
                  BinaryOp:
                    op: Add
                    lhs:
                      BinaryOp:
                        op: Div
                        lhs:
                          BinaryOp:
                            op: Mul
                            lhs:
                              Name: n
                            rhs:
                              Float: "4."
                        rhs:
                          Float: "2."
                    rhs:
                      Float: "1."
- Struct:
    name: Aaaa
    generics: ~
    fields:
      - name: aa
        ty:
          Primitive:
            name:
              base: Float32
              segments: []
            generics: ~
      - name: bb
        ty:
          Primitive:
            name:
              base: Float32
              segments: []
            generics: ~
- Enum:
    name: Bbbb
    generics: ~
    variants:
      - Tuple:
          name: Cccc
          fields:
            - Primitive:
                name:
                  base: int32
                  segments: []
                generics: ~
      - Unit: Dddd
